    ______________________________________
   |______________________________________|
   //                                   //|
  //       Plan for Serve State        // /
 //                                   // /
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~// /
|_____________________________________|/

Ball sits on the middle of the paddle and is ready to serve.

Data:

	pointer to i_data received from initial state (read only access needed)

	s_data { ball, paddle, bricks(vector), current_level_score }

Enter:

	set s_data.paddle in the middle

	set s_data.ball dx, dy to random values and put it on the middle of the s_data.paddle

	if s_data.bricks is empty (starting a new level) generate bricks with Level_maker according to
	i_data -> level and set s_data.current_level_score = 0

Update:

	don't update ball's position according to its dx and dy

	Enter       -> Play State, it receives, "pointer to i_data" and "pointer to s_data"

	Esc         -> Intial State

	left        -> move s_data.paddle and s_data.ball towards left

	right       -> move s_data.paddle and s_data.ball towards right

Render:

	Render
		s_data.ball,
		s_data.paddle,
		s_data.bricks,
		(s_data.current_level_score + i_data -> score_till_last_level) as score_till_last_level,
		hearts according to i_data -> health
		i_data -> level

Exit:

	
